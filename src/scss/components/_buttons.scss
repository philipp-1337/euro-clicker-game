// Buttons
@use "sass:map";
@use "sass:list";
@use "../abstracts/colors" as *;
@use "../abstracts/mixins" as *;
@use "../abstracts/functions" as *;

// Base button styles
.floating-click-button-container { // This is the new fixed/absolute positioned container
  position: fixed; // Or absolute if parent is relative
  bottom: 20px;
  right: 20px;
  width: 100px; // Container size matches button for simplicity here
  height: 100px;
  border-radius: 50%;
  z-index: 1000; // Container's z-index
  display: flex; // To center the inner relative div if needed
  align-items: center;
  justify-content: center;
  // Remove background, color, border, font, box-shadow from container
  // These will be on the actual button
  // transition for container's position if centerMode changes
  transition: width 0.3s, height 0.3s, left 0.3s, top 0.3s, right 0.3s, bottom 0.3s, transform 0.3s;
}

.floating-click-button-actual { // This is the actual button style
  width: 100%; // Takes full size of its immediate parent (the relative div)
  height: 100%;
  background: linear-gradient(to bottom, #ff6b6b, #e67e22);
  color: map.get($colors, white);
  border: none;
  font-size: 16px;
  font-weight: bold;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer; // border und box-shadow zur Transition hinzugefügt für den Krit-Effekt
  transition: transform 0.1s; // Only transform for the button itself
  border-radius: 50%; // Keep border-radius on the button

  &:active {
    transform: scale(0.95);
  }

  &:hover {
    background: linear-gradient(to bottom, #e67e22, #d35400);
  }

  &.critical-hit { // This applies to the button, not the container
    animation: critical-button-pulse-effect 0.3s ease-out;
  }
}

.floating-click-button-container.center-mode { // Styles for the container in center mode
    left: 50%;
    top: 50%;
    right: auto;
    bottom: auto;
    transform: translate(-50%, -50%); // This needs to be part of the transition
    width: 50vw;
    height: 50vw;
    max-width: 350px;
    max-height: 350px;
    min-width: 180px;
    min-height: 180px;
    z-index: 2000; // Higher z-index for center mode

  .floating-click-button-actual { // Button styles when in center mode (mostly for font size)
    font-size: 2.5rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.18);
    // The button will naturally fill the container due to width/height 100% of its parent (the relative div)
  }
}

.critical-hit-amount {
  position: absolute;
  bottom: 70%; // Startet etwas über dem Button (abhängig von Button-Größe anpassen)
  left: 50%;
  // transform: translateX(-50%); // Die initiale Transformation wird von der Animation gehandhabt
  font-size: 1.6rem; // Größe des Textes
  font-weight: bold;
  color: #FFD700; // Goldene Farbe
  text-shadow: 1px 1px 0px black, -1px -1px 0 black, 1px -1px 0 black, -1px 1px 0 black, 0px 0px 3px black; // Bessere Kontur
  pointer-events: none; // Damit der Text nicht mit Klicks interferiert
  animation: floatAndWobble 1.5s ease-out forwards; // Name der Animation, Dauer, Timing-Funktion
  white-space: nowrap; // Verhindert Zeilenumbrüche
  z-index: 1001; // Über dem Button
  opacity: 0; // Startet unsichtbar, Animation macht es sichtbar
 }

.clicker-buttons {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 12px;
  margin-bottom: 30px;
}

.button-container {
  flex: 1;
  min-width: 120px;
  max-width: 160px;
}

.clicker-button {
  @include button-base;
  width: 100%;
  height: 80px;
  font-size: 1rem;
  font-weight: bold;
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.upgrade-button {
  @include button-base;
  width: 120px;
  height: 70px;
  font-size: 0.9rem;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 10px;
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
}

// Button variants
@each $name, $colors in $button-colors {
  .clicker-button.#{$name},
  .upgrade-button.#{$name} {
    @include color-variant(list.nth($colors, 1), list.nth($colors, 2));
  }
}

// Cooldown indicators
.cooldown-indicator {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 5px;
  font-size: 0.8rem;
}

.cooldown-progress-bar {
  position: absolute;
  bottom: 0;
  left: 0;
  height: 6px;
  width: 100%;
  background-color: map.get($backgrounds, transparent-white-30);
  border-radius: 0 0 8px 8px;
  overflow: hidden;
}

.cooldown-progress-fill {
  height: 100%;
  background-color: map.get($backgrounds, transparent-white-90);
  transition: width 0.1s linear;
}

.cooldown-text {
  position: absolute;
  bottom: 8px;
  font-size: 0.75rem;
  color: map.get($colors, white);
  text-shadow: 0 0 2px black;
}

// Settings Button
.settings-button {
  align-items: center;
  appearance: none;
  -webkit-appearance: none;
  backface-visibility: hidden;
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  display: inline-flex;
  font-size: 1rem;
  justify-content: center;
  padding: 6px;
  transform-origin: center center;
  transition: opacity 0.2s ease, color 0.2s, transform 0.2s;
  will-change: transform;

  &:hover {
    color: black;
    transform: scale(1.1);
  }
}

// Segmented buttons
.segmented-btn-group {
  display: flex;
  justify-content: center;
  gap: 8px;
  margin: 16px 0;
}

.segmented-btn {
  border: 1px solid #3498db;
  background: #fff;
  color: map.get($colors, blue);
  padding: 6px 16px;
  border-radius: 6px;
  cursor: pointer;
  font-weight: 500;
  transition: background 0.2s, color 0.2s;

  &.active {
    background: #3498db;
    color: map.get($colors, white);
  }
}

// Premium upgrade button
.premium-upgrade-button {
  background-color: map.get($colors, blue);
  color: map.get($colors, white);
  border: none;
  border-radius: 6px;
  padding: 8px 15px;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover:not(.disabled) {
    background-color: map.get($colors, dark-hue);
    transform: translateY(-1px);
  }

  &.disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Modal buttons
.modal-btn {
  @include button-base;
  background-color: map.get($colors, blue);
  color: map.get($colors, white);
  padding: 8px 22px;
  font-size: 1rem;
  border-radius: 8px;
  font-weight: 600;
  box-shadow: 0 2px 8px rgba(52, 152, 219, 0.08);
  transition: background-color 0.2s, transform 0.1s;

  &:hover:not(.disabled) {
    background-color: map.get($colors, dark-blue);
    transform: translateY(-1px) scale(1.04);
  }

  &:active:not(.disabled) {
    transform: translateY(1px) scale(0.98);
  }

  &.danger {
    background-color: map.get($colors, red);

    &:hover:not(.disabled) {
      background-color: map.get($colors, dark-red);
    }
  }

  &.disabled {
    opacity: 0.7;
    cursor: not-allowed;
  }

  // Alternative style for last button
  &:last-of-type {
    background-color: map.get($backgrounds, off-dark);
    color: map.get($colors, white);

    &:hover:not(.disabled) {
      background-color: map.get($backgrounds, darker);
      border-color: map.get($backgrounds, dark);
      transform: translateY(-1px) scale(1.04);
    }

    &:active:not(.disabled) {
      background-color: map.get($backgrounds, dark);
      color: map.get($backgrounds, lighter-blue);
      border-color: map.get($backgrounds, darker);
      transform: translateY(1px) scale(0.98);
    }
  }
}